name: Terraform Deploy

on:
  push:
    branches: [ main ]
    paths:
      - 'infra/terraform/**'
  workflow_dispatch:

env:
  AWS_REGION: us-east-1

jobs:
  terraform-deploy:
    name: Terraform Apply
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra/terraform

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Generate terraform.tfvars
        run: |
          cat <<EOF > terraform.tfvars
          project_name  = "fraud-detection"
          environment   = "prod"
          endpoint_name = "fraud-detection-endpoint"
          model_name    = "fraud-detection-model"
          instance_type = "ml.t2.medium"
          min_instances = 1
          max_instances = 2
          alert_email   = "atandafatimat01@gmail.com"
          EOF

      - name: Terraform Init
        run: terraform init -reconfigure

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve

  post-deploy-test:
    name: Post Deployment Health Check
    runs-on: ubuntu-latest
    needs: terraform-deploy
    if: needs.terraform-deploy.result == 'success'
    defaults:
      run:
        working-directory: infra/terraform

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Wait for Endpoint Stabilization
        run: sleep 90

      - name: Setup Python Environment
        run: |
          sudo apt-get update && sudo apt-get install -y python3-pip
          python3 -m pip install boto3

      - name: Run Python Inference Test
        run: |
          python test-endpoint.py